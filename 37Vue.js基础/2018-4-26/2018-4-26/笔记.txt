linux中安装node时，  curl --silent --location https://rpm.nodesource.com/setup_9.x | sudo bash - 没有用，给我安装的是低版本的node，这怎么解决，还有node怎么升级呢

第一步：curl --silent --location https://rpm.nodesource.com/setup_9.x | sudo bash
第二步：yum install node

升级node
npm i -g n
n

------------------------------------------------------------------------------------------------------------------------

老师说一下泛型和反射吧
泛型：
class Array<t>(){
  t item[];

  void sort(){
    t tmp;


  }
}

Array<int> arr=new Array<int>();
Array<float> arr2=new Array<float>();


反射：
临时引入一些代码，动态执行——eval(code)

------------------------------------------------------------------------------------------------------------------------

HTML更新？

------------------------------------------------------------------------------------------------------------------------

typescript

------------------------------------------------------------------------------------------------------------------------

Angular   V1.x    v2.x    v4.x
Vue       大头
React

MVVM

------------------------------------------------------------------------------------------------------------------------

MVC模式
1.M   Model-模型：数据
2.V   View-视图：表现层
3.C   Controller-控制器：业务逻辑

1.分离——简洁、测试
2.分工

------------------------------------------------------------------------------------------------------------------------

MVP：
c->p
隔离

------------------------------------------------------------------------------------------------------------------------

MVVm：

p->vm
只把业务逻辑直接相关的代码留在P里面，把表现相关的代码放到视图层

1.P得到了精简——只有业务逻辑
2.视图相关的代码，最大限度重用

------------------------------------------------------------------------------------------------------------------------

vue
1.x
2.x   模块

------------------------------------------------------------------------------------------------------------------------

vue好在哪儿：
1.分工明确
2.工作效率高
3.统一

------------------------------------------------------------------------------------------------------------------------

改变：
1.不要直接操作DOM
2.数据为中心——数据驱动

------------------------------------------------------------------------------------------------------------------------

1.创建vm对象
let vm=new Vue({
  el: 根,
  data: {},

});
2.视图层(HTML)写相应代码
  i. 输出     {{}}

------------------------------------------------------------------------------------------------------------------------

数据绑定：
1.单向    {{输出}}      数据 => 视图
2.双向    v-model      数据 <=> 视图

------------------------------------------------------------------------------------------------------------------------

"vue里的属性"——指令

------------------------------------------------------------------------------------------------------------------------

1.输出
  {{}}

2.双向绑定
  v-model

3.属性绑定
  v-bind:属性="数据"
  :属性="数据"

  :style="json"
  :class="arr"

4.事件
  v-on:xxx="函数"
  @xxx="函数"

5.循环
  v-for="val,key in 数组"
  v-for="val,key in json"

6.v-show    display
7.v-if      删除

------------------------------------------------------------------------------------------------------------------------

框架选型怎么选？
1.框架本身的情况
2.团队经验

老师能说下双向绑定的原理吗？
ovserve + oninput

------------------------------------------------------------------------------------------------------------------------

1.router
2.组件
3.数据通信：fetch、axios
4.vue-cli、webpack
5.原理

------------------------------------------------------------------------------------------------------------------------


                ╭═══════════════╮
                ║         吾爱程序猿论坛       ║
  ╭══════┤     www.52programer.com      ├═══════╮
  ║            ║  专注于优质IT教程收集与分享  ║              ║
  ║            ╰═══════════════╯              ║
　║                                                            ║
  ║                                                            ║
　║    说明：本站仅为资源分享的平台，教程、软件、程序等均      ║
　║          来自于互联网及网友分享，版权归原作者所有,         ║ 
　║  	      站内资源仅供参考和学习之用，不得用于商业用途，    ║
　║          下载后请在24小时内自行删除。本站不承担任何        ║
　║          技术及版权问题。                                  ║
  ║                                                            ║
  ║     1.请遵守中华人民共和国相关法律、条例。                 ║
  ║     2.本站提供的各类教程、文章及软件等，只可研究学习，     ║
  ║       本站对使用这些工具（教程）而导致的一切后果，不承担   ║
  ║       任何责任。                                           ║
  ║     3.本站不保证提供的资源十分安全或是完全可用，请下载后   ║
  ║       自行检查。                                           ║
  ║     4.如不同意以上声明，请立即删除，不要使用，谢谢合作。   ║
  ║                                                            ║
  ║    ╭───────────────────────╮      ║
  ╰══┤  吾爱程序猿论坛         版权所有 禁止盗用    ├══╯
        ╰───────────────────────╯ 

  ────────────────────────────────
             新闻 网页 贴吧 知道 MP3 图片 视频

      ┏━━━━━━━━━━━━━━━┑┌─────┒
      ┃          吾爱程序猿论坛        │ 百度一下 ┃
      ┖───────────────┘┕━━━━━┛

  ────────────────────────────────

 ╭══════════════════════════════╮
 ║  吾爱程序猿论坛专注于优质IT教程收集与分享。收集整理的都是  ║
 ║  网上最新最有价值的IT教程、精品源码以及完整系统的学习资料。║
 ║  让大家在学习的道路上少走弯路，少花冤枉钱，帮助大家真真正  ║
 ║  正学到技术!                                               ║
 ║  只要有大家的支持，我们会做得更好！                        ║
 ║                                                            ║
 ║                  www.52programer.com                       ║
 ╰══════════════════════════════╯  

              吾爱程序猿论坛官网:www.52programer.com

              默认解压密码:www.52programer.com