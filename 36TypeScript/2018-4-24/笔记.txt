typescript -> 微软
JS太恶心了

好在哪儿？
1.补充JS没有的特性——类型、抽象、接口
2.严谨

--------------------------------------------------------------------------------

安装：
>npm i -g typescript

编译：
>tsc xxx.ts     =>    xxx.js

--------------------------------------------------------------------------------

1.类型
  变量、参数、返回值

  指明类型：
  1.显式声明      let a:string;
  2.隐式声明      let a=12;

  如果“让变量什么都能装”：
  1.不给初始值
  2.显式声明any

  number/string/boolean/any
  (类型1|类型2|类型3)
  元组类型  [类型1, 类型2]
  枚举——列举有限的可能性
  void类型——常用于返回值
  null/undefined
  never

  let a:number[]=[1,2,3];
  let a:Array<number>=[1,2,3];

--------------------------------------------------------------------------------

2.类
  新的写法

  访问修饰符——public/private/protected
    public      任何人都能修改
    private     只有类内部能使用
    protected   只有类和子类能使用

  访问修饰符怎么用？
    “最小访问原则”、"属性都是private和protected，方法可以是public"

  修饰符
    static    静态成员——无需实例化即可调用
    const     只读成员——只读的，不能修改

  存取器
    set/get     编译不了ES3/4

--------------------------------------------------------------------------------

3.高级特性
  抽象、接口

  一些对象具有共同的特性：
  1.继承
  2.实现接口

  抽象类——只提供模板，而不自己实现

  接口、抽象为了规范所有子类

--------------------------------------------------------------------------------

TypeScript：
1.类型
2.修饰符
  访问修饰符
  const、static
3.泛型
  let arr:string[]=[];
4.抽象类、接口
  推荐接口

--------------------------------------------------------------------------------

declare?
hot

--------------------------------------------------------------------------------

ts-loader

--------------------------------------------------------------------------------

Vue
