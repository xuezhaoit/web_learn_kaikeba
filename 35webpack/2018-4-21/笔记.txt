工具：
1.编译类——babel、grunt/gulp
  ES6->ES5
2.打包——browserify
  一堆文件 -> 单个文件
3.开发辅助——browser-sync
  多端同步
4.测试类——
  单元测试：模块、函数
  集成测试：
  压力测试：性能、负载能力、隐藏bug

--------------------------------------------------------------------------------

webpack+插件
打包、编译、测试、调试

--------------------------------------------------------------------------------

1.webpack安装
  cnpm i -g webpack
2.编写配置
  默认：webpack.config.js
  改了：webpack --config xxxx

--------------------------------------------------------------------------------

ES6——import/export

--------------------------------------------------------------------------------

ES6模块化
  export default xxx;         //作为模块本身被输出     import xxx from '...';
  export let a=12,b=5;        //输出模块的东西         import {a,b} from '...';

webpack基本配置
  module.exports={
    entry: '文件名',
    output: {
      path: '结果目录',
      filename: '结果文件名'
    }
  };

--------------------------------------------------------------------------------

多入口
entry: {
  名字: '入口文件地址',
  ...
},
output: {
  path: xxx,
  filename: '...[name]...'
}

--------------------------------------------------------------------------------

dev-server：
1.安装
  cnpm i webpack webpack-cli webpack-dev-server -D

--------------------------------------------------------------------------------

#webpack-cli      命令行工具
npm i -g webpack

#webpack          库
npm i webpack

--------------------------------------------------------------------------------

1.webpack本身
  打包

2.DevServer
  开发服务器

3.Loader——翻译
  babel-loader

--------------------------------------------------------------------------------

babel-loader
1.babel-loader      给webpack用的
2.babel-core        babel核心库
3.babel-preset-env  环境预设

--------------------------------------------------------------------------------

90%的loader
module: {
  rules: [
    {test: 正则, use: loader}
  ]
}

--------------------------------------------------------------------------------

1.打包->配置
2.DevServer
3.各种loader

常见loader、TypeScript
三大框架


                ╭═══════════════╮
                ║         吾爱程序猿论坛       ║
  ╭══════┤     www.52programer.com      ├═══════╮
  ║            ║  专注于优质IT教程收集与分享  ║              ║
  ║            ╰═══════════════╯              ║
　║                                                            ║
  ║                                                            ║
　║    说明：本站仅为资源分享的平台，教程、软件、程序等均      ║
　║          来自于互联网及网友分享，版权归原作者所有,         ║ 
　║  	      站内资源仅供参考和学习之用，不得用于商业用途，    ║
　║          下载后请在24小时内自行删除。本站不承担任何        ║
　║          技术及版权问题。                                  ║
  ║                                                            ║
  ║     1.请遵守中华人民共和国相关法律、条例。                 ║
  ║     2.本站提供的各类教程、文章及软件等，只可研究学习，     ║
  ║       本站对使用这些工具（教程）而导致的一切后果，不承担   ║
  ║       任何责任。                                           ║
  ║     3.本站不保证提供的资源十分安全或是完全可用，请下载后   ║
  ║       自行检查。                                           ║
  ║     4.如不同意以上声明，请立即删除，不要使用，谢谢合作。   ║
  ║                                                            ║
  ║    ╭───────────────────────╮      ║
  ╰══┤  吾爱程序猿论坛         版权所有 禁止盗用    ├══╯
        ╰───────────────────────╯ 

  ────────────────────────────────
             新闻 网页 贴吧 知道 MP3 图片 视频

      ┏━━━━━━━━━━━━━━━┑┌─────┒
      ┃          吾爱程序猿论坛        │ 百度一下 ┃
      ┖───────────────┘┕━━━━━┛

  ────────────────────────────────

 ╭══════════════════════════════╮
 ║  吾爱程序猿论坛专注于优质IT教程收集与分享。收集整理的都是  ║
 ║  网上最新最有价值的IT教程、精品源码以及完整系统的学习资料。║
 ║  让大家在学习的道路上少走弯路，少花冤枉钱，帮助大家真真正  ║
 ║  正学到技术!                                               ║
 ║  只要有大家的支持，我们会做得更好！                        ║
 ║                                                            ║
 ║                  www.52programer.com                       ║
 ╰══════════════════════════════╯  

              吾爱程序猿论坛官网:www.52programer.com

              默认解压密码:www.52programer.com