angular
v1.3+
v4

--------------------------------------------------------------------------------

1.数据

--------------------------------------------------------------------------------

1.ng-model
2.{{}}
3.ng-app=""
4.初始化：ng-init=""、?
5.属性直接写{{}}
6.ng-bind输出到标签里面
7.ng-repeat track by xxx
  v-for   :key
8.ng-click  ng-mouseover
  v-on:   @click

  ng-click="fn()"
  @click="fn"   @click="fn()"
9.controller
  let vm=new Vue({
    data: {},
    methods: {},
  });

  ng-app="xxx"
  1.范围
  2.引入组件

  ng-controller="xxx"

--------------------------------------------------------------------------------

Angular数据检查   脏检查     性能低   尽可能少检查数据
  循环

  1.函数执行完成时
  2.主动检查

Vue数据检查       observe   性能高
  this.a++;

--------------------------------------------------------------------------------

异步不友好：
1.用人家的东西
2.xxx.$apply()

$scope
$http
$interval/$timeout

--------------------------------------------------------------------------------

MVVM：
1.双向绑定
  v-model、ng-model
2.依赖注入(依赖反转)
  i.数组
  ii.json
  iii.依赖注入——由函数决定要哪些参数

--------------------------------------------------------------------------------

ng4：
1.强依赖TypeScript
2.强调组件

--------------------------------------------------------------------------------

启动器
vue-cli
@angular/cli

1.安装
  npm i -g @angular/cli

2.创建工程
  ng new xxx

--------------------------------------------------------------------------------

结构：
e2e/                测试
src/                源文件
.angular-cli.json   工程配置(*)

--------------------------------------------------------------------------------

xxx.vue
  <template>
  <script>
  <style>

--------------------------------------------------------------------------------

1.配置文件

2.启动文件
  index.html
  main.ts

3.组件

--------------------------------------------------------------------------------

组件的组成：
1.HTML
2.CSS
3.TS

标注：
给编译器看

--------------------------------------------------------------------------------

1.数据
2.route
3.组件通信


                ╭═══════════════╮
                ║         吾爱程序猿论坛       ║
  ╭══════┤     www.52programer.com      ├═══════╮
  ║            ║  专注于优质IT教程收集与分享  ║              ║
  ║            ╰═══════════════╯              ║
　║                                                            ║
  ║                                                            ║
　║    说明：本站仅为资源分享的平台，教程、软件、程序等均      ║
　║          来自于互联网及网友分享，版权归原作者所有,         ║ 
　║  	      站内资源仅供参考和学习之用，不得用于商业用途，    ║
　║          下载后请在24小时内自行删除。本站不承担任何        ║
　║          技术及版权问题。                                  ║
  ║                                                            ║
  ║     1.请遵守中华人民共和国相关法律、条例。                 ║
  ║     2.本站提供的各类教程、文章及软件等，只可研究学习，     ║
  ║       本站对使用这些工具（教程）而导致的一切后果，不承担   ║
  ║       任何责任。                                           ║
  ║     3.本站不保证提供的资源十分安全或是完全可用，请下载后   ║
  ║       自行检查。                                           ║
  ║     4.如不同意以上声明，请立即删除，不要使用，谢谢合作。   ║
  ║                                                            ║
  ║    ╭───────────────────────╮      ║
  ╰══┤  吾爱程序猿论坛         版权所有 禁止盗用    ├══╯
        ╰───────────────────────╯ 

  ────────────────────────────────
             新闻 网页 贴吧 知道 MP3 图片 视频

      ┏━━━━━━━━━━━━━━━┑┌─────┒
      ┃          吾爱程序猿论坛        │ 百度一下 ┃
      ┖───────────────┘┕━━━━━┛

  ────────────────────────────────

 ╭══════════════════════════════╮
 ║  吾爱程序猿论坛专注于优质IT教程收集与分享。收集整理的都是  ║
 ║  网上最新最有价值的IT教程、精品源码以及完整系统的学习资料。║
 ║  让大家在学习的道路上少走弯路，少花冤枉钱，帮助大家真真正  ║
 ║  正学到技术!                                               ║
 ║  只要有大家的支持，我们会做得更好！                        ║
 ║                                                            ║
 ║                  www.52programer.com                       ║
 ╰══════════════════════════════╯  

              吾爱程序猿论坛官网:www.52programer.com

              默认解压密码:www.52programer.com